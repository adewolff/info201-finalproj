shiny::runApp()
# load in data
raw_data <- read.csv("./data/MERGED2015_16_PP.csv", stringsAsFactors = FALSE)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
## bar chart script
library(dplyr)
library(ggplot2)
# load in data
raw_data <- read.csv("./data/MERGED2015_16_PP.csv", stringsAsFactors = FALSE)
# Create a new data frame with diversity
diversity_raw <- raw_data %>% select("INSTNM", "UGDS_WHITE", "UGDS_BLACK",
"UGDS_HISP", "UGDS_ASIAN", "UGDS_AIAN",
"UGDS_NHPI", "UGDS_2MOR", "UGDS_NRA",
"UGDS_UNKN")
# Rename column names
colnames(diversity_raw) <- c("Institution", "White", "Black", "Hispanic",
"Asian", "American Indian", "Pacific Islander",
"Two or More Races", "Non-resident Aliens",
"Unknown")
# Remove 'NA' values
diversity <- na.omit(diversity_raw)
# Remove 'Null' values
diversity <- filter(diversity, White != "NULL")
# Change columns to numeric
diversity[, -1] <- sapply(diversity[, -1], as.numeric)
# Mulitply decimals by 100 to get percentage
for (i in colnames(diversity)[-1]) {
diversity[i] <- diversity[i] * 100
}
comparison_chart <- function(institution) {
dataPoint <- filter(diversity, Institution == institution)
dataPoint <- melt(dataPoint,
value.name = "Percentage", varnames =
c("Institution", "Race")
)
ggplot(data = dataPoint) +
geom_bar(
mapping = aes(
x = c(
"White", "Black", "Hispanic", "Asian",
"American Indian", "Pacific Islander",
"Two or More Races", "Non-resident Aliens", "Unknown"
),
y = Percentage
),
stat = "identity", fill = rainbow(n = 9)
) +
xlab("Race") +
ylab("Percentage of Undergraduate Students") +
ggtitle(paste("Racial Breakdown by Institution in Percents")) +
theme(
axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"),
plot.title = element_text(size = 20, face = "bold", hjust = 0.5)
) %>% return()
}
View(diversity)
View(diversity)
names(iris) <- tolower(names(iris))
iris
View(iris)
iris$newColumn <- iris$petal.length + iris$species
iris$newColumn <- paste(iris$species, "Hello")
View(iris)
iris$newColumn <- paste(iris$species, iris$petal.width)
View(iris)
runApp()
diversity_raw$Institution <- paste(raw_data$INSTNM, raw_data$STABBR, sep="in ")
View(diversity_raw)
# Include which state college is located incase of duplicate names
diversity_raw$Institution <- paste(raw_data$INSTNM, raw_data$STABBR, sep=" in ")
View(diversity_raw)
runApp()
styler:::style_active_file()
styler:::style_active_file()
styler:::style_active_file()
lintr::lint("comparisonbarchart.R")
setwd("C:/Users/jenni/Desktop/info-201/info201-finalproj/scripts")
lintr::lint("comparisonbarchart.R")
lintr::lint("comparisonbarchart.R")
lintr::lint("comparisonbarchart.R")
lintr::lint("comparisonbarchart.R")
lintr::lint("comparisonbarchart.R")
setwd("C:/Users/jenni/Desktop/info-201/info201-finalproj/scripts")
lintr::lint("comparisontable.R")
setwd("C:/Users/jenni/Desktop/info-201/info201-finalproj")
lintr::lint("server.R")
lintr::lint("ui.R")
lintr::lint("ui.R")
runApp()
lintr::lint("ui.R")
lintr::lint("ui.R")
lintr::lint("ui.R")
lintr::lint("ui.R")
lintr::lint("ui.R")
library(dplyr)
library(shiny)
source("./ui.R")
library(dplyr)
library(shiny)
source("./ui.R")
# Create a new data (Important Data)
new_data <- df %>% select(
"INSTNM", "CITY", "UGDS", "UGDS_MEN",
"UGDS_WOMEN", "COSTT4_A",
"SAT_AVG"
)
colnames(new_data) <- c(
"Institution", "City", "Number_of_Undergraduates", "UG_Men",
"UG_Women", "Cost_of_Attendance", "Avg_SAT_Score"
)
# Remove 'Null' values- Non UG College
new_data <- filter(new_data, new_data$Number_of_Undergraduates != "NULL" &
new_data$Number_of_Undergraduates != 0)
new_data$Cost_of_Attendance[new_data$Cost_of_Attendance == "NULL"] <-
"Not Availible"
new_data$Avg_SAT_Score[new_data$Avg_SAT_Score == "NULL"] <- "Not Availible"
# Mulitply decimals by 100 to get percentage
new_data$UG_Men[new_data$UG_Men == "NULL"] <- 0
new_data$UG_Women[new_data$UG_Women == "NULL"] <- 0
new_data$UG_Men <- as.numeric(as.character(new_data$UG_Men)) * 100
new_data$UG_Women <- as.numeric(as.character(new_data$UG_Women)) * 100
df <- read.csv("./data/MERGED2015_16_PP.csv", stringsAsFactors = FALSE)
# Create a new data (Important Data)
new_data <- df %>% select(
"INSTNM", "CITY", "UGDS", "UGDS_MEN",
"UGDS_WOMEN", "COSTT4_A",
"SAT_AVG"
)
colnames(new_data) <- c(
"Institution", "City", "Number_of_Undergraduates", "UG_Men",
"UG_Women", "Cost_of_Attendance", "Avg_SAT_Score"
)
# Remove 'Null' values- Non UG College
new_data <- filter(new_data, new_data$Number_of_Undergraduates != "NULL" &
new_data$Number_of_Undergraduates != 0)
new_data$Cost_of_Attendance[new_data$Cost_of_Attendance == "NULL"] <-
"Not Availible"
new_data$Avg_SAT_Score[new_data$Avg_SAT_Score == "NULL"] <- "Not Availible"
# Mulitply decimals by 100 to get percentage
new_data$UG_Men[new_data$UG_Men == "NULL"] <- 0
new_data$UG_Women[new_data$UG_Women == "NULL"] <- 0
new_data$UG_Men <- as.numeric(as.character(new_data$UG_Men)) * 100
new_data$UG_Women <- as.numeric(as.character(new_data$UG_Women)) * 100
View(new_data)
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
